#############################################################################
# Generated by PAGE version 4.5
# in conjunction with Tcl version 8.6
#    Jul 25, 2015 04:57:21 PM


vTcl:font:add_GUI_font font10 \
"-family {DejaVu Sans} -size -12 -weight normal -slant roman -underline 0 -overstrike 0"
vTcl:font:add_GUI_font font11 \
"-family {DejaVu Sans Mono} -size -12 -weight normal -slant roman -underline 0 -overstrike 0"
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #d9d9d9
set vTcl(active_fg) #111111
#############################################################################
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top37
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# USER DEFINED PROCEDURES
#

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top37 {base} {
    if {$base == ""} {
        set base .top37
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background {#d9d9d9} 
    wm focusmodel $top passive
    wm geometry $top 545x435+807+191
    update
    # set in toplevel.wgt.
    global vTcl
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1905 1050
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "Flashcards Manager"
    vTcl:DefineAlias "$top" "Flashcards Manager" vTcl:Toplevel:WidgetProc "" 1
    listbox $top.lis38 \
        -background white -font font11 -foreground {#000000} \
        -listvariable list_set_var 
    .top37.lis38 configure -font font11
    vTcl:DefineAlias "$top.lis38" "list_set" vTcl:WidgetProc "Flashcards Manager" 1
    label $top.lab40 \
        -background {#d9d9d9} -foreground {#000000} -text {Available Sets} 
    vTcl:DefineAlias "$top.lab40" "Label1" vTcl:WidgetProc "Flashcards Manager" 1
    label $top.lab41 \
        -background {#d9d9d9} -foreground {#000000} -text {Selected Set} 
    vTcl:DefineAlias "$top.lab41" "Label2" vTcl:WidgetProc "Flashcards Manager" 1
    entry $top.ent42 \
        -background white -font font11 -foreground {#000000} \
        -insertbackground black -textvariable edit_set_var 
    vTcl:DefineAlias "$top.ent42" "edit_set" vTcl:WidgetProc "Flashcards Manager" 1
    label $top.lab44 \
        -background {#d9d9d9} -foreground {#000000} -text Question 
    vTcl:DefineAlias "$top.lab44" "Label3" vTcl:WidgetProc "Flashcards Manager" 1
    label $top.lab45 \
        -background {#d9d9d9} -foreground {#000000} -text Hint 
    vTcl:DefineAlias "$top.lab45" "Label4" vTcl:WidgetProc "Flashcards Manager" 1
    entry $top.ent46 \
        -background white -font font11 -foreground {#000000} \
        -insertbackground black -textvariable edit_hint_var 
    vTcl:DefineAlias "$top.ent46" "edit_hint" vTcl:WidgetProc "Flashcards Manager" 1
    label $top.lab47 \
        -background {#d9d9d9} -foreground {#000000} -text Answer 
    vTcl:DefineAlias "$top.lab47" "Label5" vTcl:WidgetProc "Flashcards Manager" 1
    button $top.but50 \
        -activebackground {#d9d9d9} -background {#d9d9d9} \
        -foreground {#000000} -highlightcolor black -text commit 
    vTcl:DefineAlias "$top.but50" "btn_commit" vTcl:WidgetProc "Flashcards Manager" 1
    bind $top.but50 <Button-1> {
        lambda e: commit(e)
    }
    text $top.tex52 \
        -background white -font font10 -foreground black -height 136 \
        -highlightcolor black -insertbackground black \
        -selectbackground {#c4c4c4} -selectforeground black -tabs {} \
        -width 346 -wrap word 
    .top37.tex52 configure -font font10
    .top37.tex52 insert end text
    vTcl:DefineAlias "$top.tex52" "txt_question" vTcl:WidgetProc "Flashcards Manager" 1
    text $top.tex53 \
        -background white -font font10 -foreground black -height 136 \
        -highlightcolor black -insertbackground black \
        -selectbackground {#c4c4c4} -selectforeground black -width 346 \
        -wrap word 
    .top37.tex53 configure -font font10
    .top37.tex53 insert end text
    vTcl:DefineAlias "$top.tex53" "Text2" vTcl:WidgetProc "Flashcards Manager" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.lis38 \
        -in $top -x 10 -y 30 -width 164 -height 364 -anchor nw \
        -bordermode ignore 
    place $top.lab40 \
        -in $top -x 10 -y 10 -anchor nw -bordermode ignore 
    place $top.lab41 \
        -in $top -x 190 -y 10 -anchor nw -bordermode ignore 
    place $top.ent42 \
        -in $top -x 190 -y 30 -anchor nw -bordermode ignore 
    place $top.lab44 \
        -in $top -x 190 -y 60 -anchor nw -bordermode ignore 
    place $top.lab45 \
        -in $top -x 190 -y 220 -anchor nw -bordermode ignore 
    place $top.ent46 \
        -in $top -x 190 -y 240 -anchor nw -bordermode ignore 
    place $top.lab47 \
        -in $top -x 190 -y 270 -anchor nw -bordermode ignore 
    place $top.but50 \
        -in $top -x 10 -y 400 -width 167 -height 27 -anchor nw \
        -bordermode ignore 
    place $top.tex52 \
        -in $top -x 190 -y 80 -width 346 -height 136 -anchor nw \
        -bordermode ignore 
    place $top.tex53 \
        -in $top -x 190 -y 290 -width 346 -height 136 -anchor nw \
        -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}

Window show .
Window show .top37

